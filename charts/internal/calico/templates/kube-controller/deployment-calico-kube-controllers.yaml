{{- if .Values.config.kubeControllers.enabled }}
---
# Source: calico/templates/calico-kube-controllers.yaml
# See https://github.com/projectcalico/kube-controllers
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
    gardener.cloud/role: system-component
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
        origin: gardener
        k8s-app: calico-kube-controllers
        gardener.cloud/role: system-component
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      tolerations:
      # Make sure kube-controllers gets scheduled on all nodes.
      - effect: NoSchedule
        operator: Exists
      # Mark the pod as a critical add-on for rescheduling.
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      serviceAccountName: calico-kube-controllers
      priorityClassName: system-cluster-critical
      # Make sure to not use the coredns for DNS resolution.
      dnsPolicy: Default
      hostIPC: false
      hostNetwork: false
      hostPID: false
      containers:
        - name: calico-kube-controllers
          image: {{ index .Values.images "calico-kube-controllers" }}
          env:
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: node
            - name: DATASTORE_TYPE
              value: kubernetes
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              memory: 2Gi
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - /usr/bin/check-status
                - -r
            periodSeconds: 10
            timeoutSeconds: 10
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: true
            # Health checks are written on a file which is
            # writable only to root
            privileged: true
{{- end }}
